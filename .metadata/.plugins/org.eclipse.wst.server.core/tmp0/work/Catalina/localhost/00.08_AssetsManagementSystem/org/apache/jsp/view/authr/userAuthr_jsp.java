/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.17
 * Generated at: 2018-05-22 16:32:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view.authr;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class userAuthr_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	String path = request.getContextPath();
	String basePath = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort()
			+ path + "/";

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<base href=\"");
      out.print(basePath);
      out.write("\" />\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>企业资产管理系统</title>\r\n");
      out.write("<meta name=\"renderer\" content=\"webkit|ie-comp|ie-stand\"/>\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"/>\r\n");
      out.write("<meta http-equiv=\"Cache-Control\" content=\"no-siteapp\" />\r\n");
      out.write("<link rel=\"shortcut icon\" href=\"/favicon.ico\" type=\"image/x-icon\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/font.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/xadmin.css\">\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"js/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"lib/layui/layui.js\"\r\n");
      out.write("\tcharset=\"utf-8\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/xadmin.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"x-nav\">\r\n");
      out.write("      <span class=\"layui-breadcrumb\">\r\n");
      out.write("        <a href=\"\">权限管理</a>\r\n");
      out.write("        <a>\r\n");
      out.write("          <cite>职工权限分配</cite></a>\r\n");
      out.write("      </span>\r\n");
      out.write("      <a class=\"layui-btn layui-btn-small\" style=\"line-height:1.6em;margin-top:3px;float:right\" href=\"javascript:location.replace(location.href);\" title=\"刷新\">\r\n");
      out.write("        <i class=\"layui-icon\" style=\"line-height:30px\">ဂ</i></a>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"x-body\">\r\n");
      out.write("      <div class=\"layui-row\">\r\n");
      out.write("        <form id=\"filter\" method=\"post\" class=\"layui-form layui-col-md12 x-so\">\r\n");
      out.write("          <div class=\"layui-input-inline\">\r\n");
      out.write("            <select id=\"depart\" name=\"depart\">\r\n");
      out.write("              <option value=\"\">员工所在部门</option>\r\n");
      out.write("              <option value=\"人力资源部\">人力资源部</option>\r\n");
      out.write("              <option value=\"后勤服务部\">后勤服务部</option>   \r\n");
      out.write("            </select>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"layui-input-inline\">\r\n");
      out.write("            <select id=\"authr\" name=\"authr\">\r\n");
      out.write("              <option value=\"\">员工拥有权限</option>\r\n");
      out.write("              <option value=\"职工管理\">职工管理</option>\r\n");
      out.write("              <option value=\"权限管理\">权限管理</option>\r\n");
      out.write("              <option value=\"个人资产\">个人资产</option>\r\n");
      out.write("              <option value=\"流程管理\">流程管理</option>\r\n");
      out.write("              <option value=\"资金核算\">资金核算</option>\r\n");
      out.write("              <option value=\"库存管理\">库存管理</option>\r\n");
      out.write("            </select>\r\n");
      out.write("          </div>\r\n");
      out.write("          \r\n");
      out.write("          <input type=\"text\" id=\"userName\" name=\"userName\"  placeholder=\"员工姓名\" autocomplete=\"off\" class=\"layui-input\">\r\n");
      out.write("          <a class=\"layui-btn\"  lay-submit=\"\" lay-filter=\"sreach\"><i class=\"layui-icon\">&#xe615;</i></a>\r\n");
      out.write("        </form>\r\n");
      out.write("      </div>\r\n");
      out.write("      \r\n");
      out.write("      <blockquote  class=\"layui-elem-quote\">共有数据：<a onclick=\"test()\" id=\"total\">?</a> 条</blockquote>\r\n");
      out.write("      <table class=\"layui-table\">\r\n");
      out.write("        <thead>\r\n");
      out.write("          <tr>\r\n");
      out.write("          \r\n");
      out.write("            <th>姓名</th>\r\n");
      out.write("            <th>所属部门</th>\r\n");
      out.write("            <th>职位</th>\r\n");
      out.write("            <th>加入时间</th>\r\n");
      out.write("            <th >操作</th>\r\n");
      out.write("            </tr>\r\n");
      out.write("        </thead>\r\n");
      out.write("        <tbody id=\"roles\">\r\n");
      out.write("          <tr>          \r\n");
      out.write("            <td>老王:18925139194</td>\r\n");
      out.write("            <td>7829.10</td>\r\n");
      out.write("            <td>7854.10</td>\r\n");
      out.write("           \r\n");
      out.write("            <td>2017-08-17 18:22</td>\r\n");
      out.write("            <td class=\"td-manage\">\r\n");
      out.write("              <a title=\"编辑\"  onclick=\"x_admin_show('编辑','roleEdit.html',600,400)\" href=\"javascript:;\">\r\n");
      out.write("                <i class=\"layui-icon\">&#xe642;</i>\r\n");
      out.write("              </a>\r\n");
      out.write("            </td>\r\n");
      out.write("          </tr>\r\n");
      out.write("        </tbody>\r\n");
      out.write("      </table>\r\n");
      out.write("      <div id=\"test1\" style=\"text-align:center\"></div>\r\n");
      out.write("\t\t\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\t</body>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("var authr=null;\r\n");
      out.write("var depart=null;\r\n");
      out.write("var userName=null;\r\n");
      out.write("var total=0;\r\n");
      out.write("\r\n");
      out.write("layui.use(['form', 'laypage', 'laydate'], function(){\r\n");
      out.write("  var form = layui.form\r\n");
      out.write("  ,layer = layui.layer\r\n");
      out.write(" ,laypage = layui.laypage\r\n");
      out.write("  ,laydate = layui.laydate;\r\n");
      out.write("  \r\n");
      out.write("  //日期\r\n");
      out.write("  laydate.render({\r\n");
      out.write("    elem: '#date'\r\n");
      out.write("  });\r\n");
      out.write("  laydate.render({\r\n");
      out.write("    elem: '#date1'\r\n");
      out.write("  });\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("//自定义验证规则\r\n");
      out.write("form.verify({\r\n");
      out.write("    title: function(value){\r\n");
      out.write("      if(value.length < 5){\r\n");
      out.write("        return '标题至少得5个字符啊';\r\n");
      out.write("      }\r\n");
      out.write("    }\r\n");
      out.write("    ,pass: [/(.+){6,12}$/, '密码必须6到12位']\r\n");
      out.write("    ,content: function(value){\r\n");
      out.write("      layedit.sync(editIndex);\r\n");
      out.write("    }\r\n");
      out.write("});\r\n");
      out.write("//\r\n");
      out.write("////监听指定开关\r\n");
      out.write("  form.on('switch(switchTest)', function(data){\r\n");
      out.write("    layer.msg('开关checked：'+ (this.checked ? 'true' : 'false'), {\r\n");
      out.write("      offset: '6px'\r\n");
      out.write("    });\r\n");
      out.write("    layer.tips('温馨提示：请注意开关状态的文字可以随意定义，而不仅仅是ON|OFF', data.othis)\r\n");
      out.write("  });\r\n");
      out.write("  \r\n");
      out.write("  form.on('submit(sreach)', function(data){\r\n");
      out.write("      console.log(data);\r\n");
      out.write("       authr=$(\"#authr\").val();\r\n");
      out.write("       depart=$(\"#depart\").val();\r\n");
      out.write("       userName=$(\"#userName\").val();\r\n");
      out.write("       showPage(-1);\r\n");
      out.write("       laypage.render({\r\n");
      out.write("    \t\t  elem: 'test1'\r\n");
      out.write("    \t\t  ,count: total //数据总数，从服务端得到\r\n");
      out.write("    \t\t  ,limit:1\r\n");
      out.write("    \t\t  ,jump: function(obj, first){\r\n");
      out.write("    \t\t    //obj包含了当前分页的所有参数，比如：\r\n");
      out.write("    \t\t    console.log(obj.curr); //得到当前页，以便向服务端请求对应页的数据。\r\n");
      out.write("    \t\t    console.log(obj.limit); //得到每页显示的条数\r\n");
      out.write("    \t\t    \r\n");
      out.write("    \t\t    //首次不执行\r\n");
      out.write("    \t\t    if(!first){\r\n");
      out.write("    \t\t    \tshowPage(obj.curr);\r\n");
      out.write("    \t\t    }\r\n");
      out.write("    \t\t  }\r\n");
      out.write("    \t\t});\r\n");
      out.write("      return false;\r\n");
      out.write("    });\r\n");
      out.write("  \r\n");
      out.write("  //监听提交\r\n");
      out.write("  form.on('submit(demo1)', function(data){\r\n");
      out.write("    layer.alert(JSON.stringify(data.field), {\r\n");
      out.write("      title: '最终的提交信息'\r\n");
      out.write("    })\r\n");
      out.write("    return false;\r\n");
      out.write("  });\r\n");
      out.write("  //分页的ajax\r\n");
      out.write("  function showPage(n) {\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\ttype : \"POST\",\r\n");
      out.write("\t\tasync:false,\r\n");
      out.write("\t\tdata : {\r\n");
      out.write("\t\t\tauthr:authr,\r\n");
      out.write("\t\t\tdepart:depart,\r\n");
      out.write("\t\t\tuserName:userName,\r\n");
      out.write("\t\t\tindex:n\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tdataType : \"text\",\r\n");
      out.write("\t\turl : \"roleController/getUserRole.ajax\",\r\n");
      out.write("\t\tsuccess : function(result) {\r\n");
      out.write("\t\t\tconsole.log(result);\r\n");
      out.write("\t\t\tvar tl = eval(\"(\" + result + \")\");\r\n");
      out.write("\t\t\tif(n==-1){\r\n");
      out.write("\t\t\t\ttotal=tl.total;\r\n");
      out.write("\t\t\t\t$(\"#total\").text(total);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t$(\"#roles\").html(\"\");\r\n");
      out.write("\t\t\t//json遍历\r\n");
      out.write("\t\t\tif(tl.data.length>0){\r\n");
      out.write("\t\t\t\t$.each(tl.data, function(n,val){\r\n");
      out.write("\t\t\t\t\tconsole.log(n);\r\n");
      out.write("\t\t\t\t\tvar str=\"\";\r\n");
      out.write("\t\t\t\t    str+=\"<tr>\";\r\n");
      out.write("\t\t\t\t    str+=\"<td>\"+val.userName+\"</td>\"\r\n");
      out.write("\t\t\t\t    str+=\"<td>\"+val.userDepartement+\"</td>\"\r\n");
      out.write("\t\t\t\t    str+=\"<td>\"+val.userPosition+\"</td>\"\r\n");
      out.write("\t\t\t\t    str+=\"<td>\"+new Date(val.userEntrytime).format(\"yyyy-MM-dd hh:mm\")+\"</td>\"\r\n");
      out.write("\t\t\t\t    str+=\"<td><a class=\\\"layui-btn  layui-btn-mini\\\" onclick=\\\"x_admin_show('日志预览','roleController/changeUserRole.do?userId=\"+val.userId+\"')\\\" ><i class=\\\"layui-icon\\\">&#xe642;</i>编辑</a></td>\"\r\n");
      out.write("\t\t\t\t    str+=\"</tr>\";\r\n");
      out.write("\t\t\t\t\t$(\"#roles\").append(str);\r\n");
      out.write("\t\t\t\t})\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\t$(\"#roles\").append(\"<tr><td colspan=5 align=\\\"center\\\">暂时没有数据哦，快去添加一条吧</td></tr>\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror : function() {\r\n");
      out.write("\t\t\tlayer.msg('无法连接服务器', {icon: 2});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("  //分页\r\n");
      out.write("  showPage(-1);\r\n");
      out.write("  laypage.render({\r\n");
      out.write("\t  elem: 'test1'\r\n");
      out.write("\t  ,count: total //数据总数，从服务端得到\r\n");
      out.write("\t  ,limit:1\r\n");
      out.write("\t  ,jump: function(obj, first){\r\n");
      out.write("\t    //obj包含了当前分页的所有参数，比如：\r\n");
      out.write("\t    console.log(obj.curr); //得到当前页，以便向服务端请求对应页的数据。\r\n");
      out.write("\t    console.log(obj.limit); //得到每页显示的条数\r\n");
      out.write("\t    \r\n");
      out.write("\t    //首次不执行\r\n");
      out.write("\t    if(!first){\r\n");
      out.write("\t    \tshowPage(obj.curr);\r\n");
      out.write("\t    }\r\n");
      out.write("\t  }\r\n");
      out.write("\t});\r\n");
      out.write("  \r\n");
      out.write("});\r\n");
      out.write("function test() {\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\ttype : \"POST\",\r\n");
      out.write("\t\tasync:false,\r\n");
      out.write("\t\tdata : {\r\n");
      out.write("\t\t\tindex:null\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tdataType : \"text\",\r\n");
      out.write("\t\turl : \"roleController/getUserRole.ajax\",\r\n");
      out.write("\t\tsuccess : function(result) {\r\n");
      out.write("\t\t\talert(result);\r\n");
      out.write("\t\t\tconsole.log(result);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror : function() {\r\n");
      out.write("\t\t\tlayer.msg('无法连接服务器', {icon: 2});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
